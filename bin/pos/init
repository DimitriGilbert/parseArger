#!/bin/bash
# @parseArger-begin
# @parseArger-help "parseArger init string for agruments" --option "help" --short-option "h"
# @parseArger-declarations
# @parseArger pos arg-name "positional argument name"
# @parseArger pos description "positional argument description"
# @parseArger opt repeat-min "minimum repeatition forces --repeat" --default-value "1"
# @parseArger opt repeat-max "maximum repeatition forces --repeat"
# @parseArger opt one-of "accepted values" --repeat
# @parseArger flag repeat "repeatable" --short r
# @parseArger flag optional "optional"
# @parseArger flag subcommand "is a subcommand"
# @parseArger-declarations-end

# @parseArger-utils
_helpHasBeenPrinted=1;
# @parseArger-utils-end

# @parseArger-parsing
die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo -e "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options=''
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# POSITIONALS ARGUMENTS
_positionals=();
_arg_arg_name="";
_arg_description="";
# OPTIONALS ARGUMENTS
_arg_repeat_min="1"
_arg_repeat_max=
_arg_one_of=()
# FLAGS
_arg_repeat="off"
_arg_optional="off"
_arg_subcommand="off"


print_help()
{

	if [[ "$_helpHasBeenPrinted" == "1" ]]; then
		_helpHasBeenPrinted=0;
		echo -e "parseArger init string for agruments:"
	echo -e "	arg-name: positional argument name"
	echo -e "	description: positional argument description"
	echo -e "	--repeat-min <repeat-min>: minimum repeatition forces --repeat [default: ' 1 ']"
	echo -e "	--repeat-max <repeat-max>: maximum repeatition forces --repeat"
	echo -e "	--one-of <one-of>: accepted values, repeatable"
	echo -e "	-r|--repeat|--no-repeat: repeatable"
	echo -e "	--optional|--no-optional: optional"
	echo -e "	--subcommand|--no-subcommand: is a subcommand"
	echo -e "Usage :
	$0 <arg-name> <description> [--repeat-min <value>] [--repeat-max <value>] [--one-of <value>] [--[no-]repeat] [--[no-]optional] [--[no-]subcommand]";
	fi

}

parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--repeat-min)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_repeat_min="$2"
				shift
				;;
			--repeat-min=*)
				_arg_repeat_min="${_key##--repeat-min=}"
				;;
			
			--repeat-max)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_repeat_max="$2"
				shift
				;;
			--repeat-max=*)
				_arg_repeat_max="${_key##--repeat-max=}"
				;;
			
			--one-of)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_one_of+=("$2")
				shift
				;;
			--one-of=*)
				_arg_one_of+=("${_key##--one-of=}")
				;;
			
			-r|--repeat)
				_arg_repeat="on"
				;;
			--no-repeat)
				_arg_repeat="off"
				;;
			--optional)
				_arg_optional="on"
				;;
			--no-optional)
				_arg_optional="off"
				;;
			--subcommand)
				_arg_subcommand="on"
				;;
			--no-subcommand)
				_arg_subcommand="off"
				;;
			-h|--help)
				print_help;
				exit 0;
				;;
			-h*)
				print_help;
				exit 0;
				;;
			-v|--version)
				print_version;
				exit 0;
				;;
			-v*)
				print_version;
				exit 0;
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	local _required_args_string="arg-name description"
	if [ "${_positionals_count}" -gt 2 ] && [ "$_helpHasBeenPrinted" == "1" ];then
		_PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect at most 2 (namely: $_required_args_string), but got ${_positionals_count} (the last one was: '${_last_positional}').
	${_positionals[*]}" 1
	fi
	if [ "${_positionals_count}" -lt 2 ] && [ "$_helpHasBeenPrinted" == "1" ];then
		_PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require at least 2 (namely: $_required_args_string), but got only ${_positionals_count}.
	${_positionals[*]}" 1;
	fi
}


assign_positional_args()
{
	local _positional_name _shift_for=$1;
	_positional_names="_arg_arg_name _arg_description ";
	shift "$_shift_for"
	for _positional_name in ${_positional_names};do
		test $# -gt 0 || break;
		eval "if [ \"\$_one_of${_positional_name}\" != \"\" ];then [[ \"\${_one_of${_positional_name}[*]}\" =~ \"\${1}\" ]];fi" || die "${_positional_name} must be one of: $(eval "echo \"\${_one_of${_positional_name}[*]}\"")" 1
eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an ParseArger bug." 1;
		shift;
	done
}

print_debug()
{
	print_help
	# shellcheck disable=SC2145
	echo "DEBUG: $0 $@";
	
	echo -e "\targ-name: ${_arg_arg_name}";
	echo -e "\tdescription: ${_arg_description}";
	echo -e "\trepeat-min: ${_arg_repeat_min}";
	echo -e "\trepeat-max: ${_arg_repeat_max}";
	echo -e "\tone-of: ${_arg_one_of[*]}";
	echo -e "\trepeat: ${_arg_repeat}";
	echo -e "\toptional: ${_arg_optional}";
	echo -e "\tsubcommand: ${_arg_subcommand}";

}

print_version()
{
	echo "";
}

on_interrupt() {
	die Process aborted! 130;
}

parse_commandline "$@";
handle_passed_args_count;
assign_positional_args 1 "${_positionals[@]}";
trap on_interrupt INT;


# @parseArger-parsing-end
# print_debug "$@"
# @parseArger-end

initStr="_arg_${_arg_arg_name//-/_}=\"$_arg_default_value\";";
if [ "${#_arg_one_of[@]}" -gt 0 ]; then
	initStr+="\n_one_of_arg_${_arg_arg_name//-/_}=(";
	for i in "${_arg_one_of[@]}"; do
		initStr+="\"$i\" ";
	done
	initStr+=");";
fi

if [ "$_arg_subcommand" == "on" ]; then
	initStr+="\n_arg_subcommand_arg=\"_arg_${_arg_arg_name//-/_}\";";
fi

echo -e "$initStr";
