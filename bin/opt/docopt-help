#!/bin/bash
# @parseArger-begin
# @parseArger-help "I send an SOS to the world" --option "help" --short-option "h"
# @parseArger-declarations
# @parseArger pos arg-name "positional argument name"
# @parseArger pos description "positional argument description"
# @parseArger opt repeat-min "minimum repeatition forces repeat" --default-value "1"
# @parseArger opt repeat-max "maximum repeatition forces repeat"
# @parseArger opt one-of "accepted values" --repeat
# @parseArger opt default-value "value" --short d --repeat
# @parseArger opt short "short form" --short s
# @parseArger flag repeat "repeatable" --short r
# @parseArger-declarations-end

# @parseArger-utils
_helpHasBeenPrinted=1;
# @parseArger-utils-end

# @parseArger-parsing
die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options=''
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# POSITIONALS ARGUMENTS
_positionals=();
_arg_arg_name="";
_arg_description="";
# OPTIONALS ARGUMENTS
_arg_repeat_min="1"
_arg_repeat_max=
_arg_one_of=()
_arg_default_value=()
_arg_short=
# FLAGS
_arg_repeat="off"


print_help()
{

	if [[ "$_helpHasBeenPrinted" == "1" ]]; then
		_helpHasBeenPrinted=0;
		echo -e "I send an SOS to the world:"
	echo -e "	arg-name: positional argument name"
	echo -e "	description: positional argument description"
	echo -e "	--repeat-min <repeat-min>: minimum repeatition forces repeat [default: ' 1 ']"
	echo -e "	--repeat-max <repeat-max>: maximum repeatition forces repeat"
	echo -e "	--one-of <one-of>: accepted values, repeatable"
	echo -e "	-d, --default-value <default-value>: value, repeatable"
	echo -e "	-s, --short <short>: short form"
	echo -e "	-r|--repeat|--no-repeat: repeatable"
	echo -e "Usage :
	$0 <arg-name> <description> [--repeat-min <value>] [--repeat-max <value>] [--one-of <value>] [--default-value <value>] [--short <value>] [--[no-]repeat]";
	fi

}

parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--repeat-min)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_repeat_min="$2"
				shift
				;;
			--repeat-min=*)
				_arg_repeat_min="${_key##--repeat-min=}"
				;;
			
			--repeat-max)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_repeat_max="$2"
				shift
				;;
			--repeat-max=*)
				_arg_repeat_max="${_key##--repeat-max=}"
				;;
			
			--one-of)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_one_of+=("$2")
				shift
				;;
			--one-of=*)
				_arg_one_of+=("${_key##--one-of=}")
				;;
			
			-d|--default-value)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_default_value+=("$2")
				shift
				;;
			--default-value=*)
				_arg_default_value+=("${_key##--default-value=}")
				;;
			-d*)
				_arg_default_value+=("${_key##-d}")
				;;
			
			-s|--short)
				test $# -lt 2 && die "Missing value for the option: '$_key'" 1
				_arg_short="$2"
				shift
				;;
			--short=*)
				_arg_short="${_key##--short=}"
				;;
			-s*)
				_arg_short="${_key##-s}"
				;;
			
			-r|--no-repeat|--repeat)
				_arg_repeat="on"
				test "${1:0:5}" = "--no-" && _arg_repeat="off"
				;;
			-h|--help)
				print_help;
				exit 0;
				;;
			-h*)
				print_help;
				exit 0;
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	local _required_args_string="arg-name description"
	if [ "${_positionals_count}" -lt 2 ] && [ "$_helpHasBeenPrinted" == "1" ];then
		_PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect at most 2 (namely: $_required_args_string), but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
	fi
	if [ "${_positionals_count}" -gt 2 ] && [ "$_helpHasBeenPrinted" == "1" ];then
		_PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require at least 2 (namely: $_required_args_string), but got only ${_positionals_count}." 1;
	fi
}


assign_positional_args()
{
	local _positional_name _shift_for=$1;
	_positional_names="_arg_arg_name _arg_description ";
	shift "$_shift_for"
	for _positional_name in ${_positional_names};do
		test $# -gt 0 || break;
		eval "if [ \"\$_one_of${_positional_name}\" != \"\" ];then [[ \"\${_one_of${_positional_name}[*]}\" =~ \"\${1}\" ]];fi" || die "${_positional_name} must be one of: $(eval "echo \"\${_one_of${_positional_name}[*]}\"")" 1
eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1;
		shift;
	done
}

print_debug()
{
	print_help
	# shellcheck disable=SC2145
	echo "DEBUG: $0 $@";
	
	echo -e "\targ-name: ${_arg_arg_name}";
	echo -e "\tdescription: ${_arg_description}";
	echo -e "\trepeat-min: ${_arg_repeat-min | sed 's/-/_/g'}";
	echo -e "\trepeat-max: ${_arg_repeat-max | sed 's/-/_/g'}";
	echo -e "\tone-of: ${_arg_one-of | sed 's/-/_/g'}";
	echo -e "\tdefault-value: ${_arg_default-value | sed 's/-/_/g'}";
	echo -e "\tshort: ${_arg_short | sed 's/-/_/g'}";
	echo -e "\trepeat: ${_arg_repeat | sed 's/-/_/g'}";

}

on_interrupt() {
	die Process aborted! 130;
}

parse_commandline "$@";
handle_passed_args_count;
assign_positional_args 1 "${_positionals[@]}";
trap on_interrupt INT;


# @parseArger-parsing-end
# print_debug "$@"
# @parseArger-end

optHelp="--${_arg_arg_name} ${_arg_arg_name}";

if [ "$_arg_short" != "" ]; then
  optHelp="-${_arg_short} ${_arg_arg_name}, ${optHelp}";
fi

optHelp="${optHelp}\t${_arg_description}";

if [ "$_arg_default_value" != "" ]; then
	optHelp="${optHelp} [default: ${_arg_default_value}]";
fi

echo -e "${optHelp}";
