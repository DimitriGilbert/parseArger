#!/bin/bash
paStart="# @parse";
paStart+="Arger";

parsearger_get_help() {
  sed -ne 's/'"${paStart}"'-help \(.*\).*/\1/p' "$1"
}
parsearger_get_version() {
  sed -ne 's/'"${paStart}"'-version \(.*\).*/\1/p' "$1"
}
parsearger_get_set() {
  local -n _lset=$1;
  readarray -t _lset <<< "$(sed -ne 's/'"${paStart}"'-set \(.*\).*/\1/p' "$2")"
}
parsearger_get_leftovers() {
  sed -ne 's/'"${paStart}"'-leftovers \(.*\).*/\1/p' "$1" | awk '{print $1}'
}
parsearger_get_parse_leftovers() {
  sed -ne 's/'"${paStart}"'-leftovers \(.*\).*/\1/p' "$1" | awk '{print $2}'
}
parsearger_get_source() {
  local -n _lsource=$1;
  readarray -t _lsource <<< "$(sed -ne 's/'"${paStart}"'-source \(.*\).*/\1/p' "$2")"
}
parsearger_get_pos() {
  local -n _lpos=$1;
  readarray -t _lpos <<< "$(sed -ne 's/'"${paStart}"' pos \(.*\).*/\1/p' "$2")"
}
parsearger_get_opt() {
  local -n _lopt=$1;
  readarray -t _lopt <<< "$(sed -ne 's/'"${paStart}"' opt \(.*\).*/\1/p' "$2")"
}
parsearger_get_flag() {
  local -n _lflag=$1;
  readarray -t _lflag <<< "$(sed -ne 's/'"${paStart}"' flag \(.*\).*/\1/p' "$2")"
}
parsearger_get_nested() {
  local -n _lnested=$1;
  readarray -t _lnested <<< "$(sed -ne 's/'"${paStart}"' nested \(.*\).*/\1/p' "$2")"
}
parsearger_get_one_ofs() {
  local -n _lone_ofs=$1;
  readarray -t _lone_ofs <<< "$(echo "$2" | grep -oE -- '--one-of "([^"]+)"' | cut -d'"' -f2)"
}
parsearger_get_dependencies() {
  local -n _ldependencies=$1;
  readarray -t _ldependencies <<< "$(sed -ne 's/'"${paStart}"'-dependencies \(.*\).*/\1/p' "$2")"
}
parsearger_is_pa_file() {
  if [ -f "$1" ]; then
    local _isPA="$(sed -ne 's/'"${paStart}"'//p' "$1")";
    if [ "${_isPA}" != "" ]; then
      return 0;
    else
      return 1;
    fi
  else
    return 1;
  fi
}